{"name":"Pdforama","tagline":"Awesome interface for viewing presentations (proof of concept)","body":"# PDForama\r\nThey say release early so here you are.\r\n\r\nThis is a proof-of-concept for integrating two awesome js libraries: [pdf.js](http://mozilla.github.io/pdf.js/) and [fotorama](http://fotorama.io). The result is an awesome interface for presentation viewing.\r\n\r\nI'll post a live example soon.\r\n\r\nUsage:\r\n\r\n\t<head>\r\n  \t\t<!-- jQuery -->\r\n  \t\t<script src=\"http://code.jquery.com/jquery-1.10.2.min.js\"></script>\r\n\r\n\t\t<!-- Fotorama -->\r\n\t\t<link href=\"fotorama.css\" rel=\"stylesheet\">\r\n\t\t<script src=\"fotorama.js\"></script>\r\n\r\n\t\t<!-- pdf.js -->\r\n\t\t<script src=\"pdf.js\"></script>\r\n\r\n\t\t<!-- pdforama -->\r\n\t\t<script src=\"pdforama.js\"></script>\r\n\t</head>\r\n\r\n\t<body>\r\n\r\n\t\t<!-- Shoot -->\r\n\t\t<div class=\"pdforama\" data-pdf=\"cors2.pdf\"></div>\r\n\r\n\t</body>\r\n\r\n\r\nCurrently it only supports a default-sized fotorama window and is mostly unusable until the whole pdf is loaded. Told you it's only a proof of concept.\r\n\r\nThe plans are huge:\r\n\r\n* Allow any width and height (absolute and relative)\r\n* Previews\r\n* Progressive loading\r\n* npm/bower module\r\n* Manual initialization and API\r\n* Use fotorama native loading to show unloaded pages\r\n* Make links and other active pdf content work\r\n* Cleaner code and tests\r\n\r\nPlease let me know what features you would like to see in the issues section.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}